name: Push

on:
  pull_request:
    branches:
      - "main"

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: pip install black

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          black: true

  run-tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pip install pytest
          pip install pytest-cov
          pip install mock
          pip install pytest-httpserver
          python -m pytest --cov-config=.coveragerc --cov=. --exitfirst --verbose --failed-first --cov-fail-under=70

  build:
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"

    needs: [run-linters, run-tests]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate Tag
        id: generate_tag
        uses: anothrNick/github-tag-action@1.52.0
        env:
          GITHUB_TOKEN: ${{ secrets.ECM3440_GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          DRY_RUN: true

      - name: Login to Docker Hub
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Generate image repository path
        id: image_repository_op
        run: |
          echo IMAGE_REPOSITORY=$(echo ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo "image_repository=$IMAGE_REPOSITORY" >> $GITHUB_OUTPUT

      - name: Build and push image
        run: |
          docker compose -f "docker-compose.yml" build

          docker tag sensorrequest sensorrequest:${{ steps.generate_tag.outputs.new_tag }}

          docker push sensorrequest:${{ steps.generate_tag.outputs.new_tag }}

      - name: Comment on PR
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ECM3440_GITHUB_TOKEN }}
        with:
          message: "@${{ github.actor }} Image is available for testing. `docker pull ${{ env.IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.new_tag }}`"
          allow-repeats: false

      # - name: Push Latest Tag
      #   uses: anothrNick/github-tag-action@1.52.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.ECM3440_GITHUB_TOKEN }}
      #     WITH_V: true
      #     DEFAULT_BUMP: patch

      - name: Notify Failure
        if: failure()
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ECM3440_GITHUB_TOKEN }}
        with:
          message: "@${{ github.actor }} Yikes! You better fix it before anyone else finds out! [Build](https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }}/checks) has Failed!"
          allow-repeats: false
